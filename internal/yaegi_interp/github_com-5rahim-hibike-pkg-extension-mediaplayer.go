// Code generated by 'yaegi extract github.com/5rahim/hibike/pkg/extension/mediaplayer'. DO NOT EDIT.

package yaegi_interp

import (
	"github.com/5rahim/hibike/pkg/extension/mediaplayer"
	"reflect"
)

func init() {
	Symbols["github.com/5rahim/hibike/pkg/extension/mediaplayer/mediaplayer"] = map[string]reflect.Value{
		// type definitions
		"ClientInfo":     reflect.ValueOf((*mediaplayer.ClientInfo)(nil)),
		"MediaPlayer":    reflect.ValueOf((*mediaplayer.MediaPlayer)(nil)),
		"PlayRequest":    reflect.ValueOf((*mediaplayer.PlayRequest)(nil)),
		"PlayResponse":   reflect.ValueOf((*mediaplayer.PlayResponse)(nil)),
		"PlaybackStatus": reflect.ValueOf((*mediaplayer.PlaybackStatus)(nil)),
		"Settings":       reflect.ValueOf((*mediaplayer.Settings)(nil)),

		// interface wrapper definitions
		"_MediaPlayer": reflect.ValueOf((*_github_com_5rahim_hibike_pkg_extension_mediaplayer_MediaPlayer)(nil)),
	}
}

// _github_com_5rahim_hibike_pkg_extension_mediaplayer_MediaPlayer is an interface wrapper for MediaPlayer type
type _github_com_5rahim_hibike_pkg_extension_mediaplayer_MediaPlayer struct {
	IValue             interface{}
	WGetPlaybackStatus func() (*mediaplayer.PlaybackStatus, error)
	WGetSettings       func() mediaplayer.Settings
	WInitConfig        func(config map[string]interface{})
	WPlay              func(req mediaplayer.PlayRequest) (*mediaplayer.PlayResponse, error)
	WStart             func() error
	WStop              func() error
	WStream            func(req mediaplayer.PlayRequest) (*mediaplayer.PlayResponse, error)
}

func (W _github_com_5rahim_hibike_pkg_extension_mediaplayer_MediaPlayer) GetPlaybackStatus() (*mediaplayer.PlaybackStatus, error) {
	return W.WGetPlaybackStatus()
}
func (W _github_com_5rahim_hibike_pkg_extension_mediaplayer_MediaPlayer) GetSettings() mediaplayer.Settings {
	return W.WGetSettings()
}
func (W _github_com_5rahim_hibike_pkg_extension_mediaplayer_MediaPlayer) InitConfig(config map[string]interface{}) {
	W.WInitConfig(config)
}
func (W _github_com_5rahim_hibike_pkg_extension_mediaplayer_MediaPlayer) Play(req mediaplayer.PlayRequest) (*mediaplayer.PlayResponse, error) {
	return W.WPlay(req)
}
func (W _github_com_5rahim_hibike_pkg_extension_mediaplayer_MediaPlayer) Start() error {
	return W.WStart()
}
func (W _github_com_5rahim_hibike_pkg_extension_mediaplayer_MediaPlayer) Stop() error {
	return W.WStop()
}
func (W _github_com_5rahim_hibike_pkg_extension_mediaplayer_MediaPlayer) Stream(req mediaplayer.PlayRequest) (*mediaplayer.PlayResponse, error) {
	return W.WStream(req)
}
