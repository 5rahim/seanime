// Code generated by 'yaegi extract github.com/goccy/go-json'. DO NOT EDIT.

package yaegi_interp

import (
	"context"
	"github.com/goccy/go-json"
	"reflect"
)

func init() {
	Symbols["github.com/goccy/go-json/json"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"BuildFieldQuery":             reflect.ValueOf(json.BuildFieldQuery),
		"BuildSubFieldQuery":          reflect.ValueOf(json.BuildSubFieldQuery),
		"Colorize":                    reflect.ValueOf(json.Colorize),
		"Compact":                     reflect.ValueOf(json.Compact),
		"CreatePath":                  reflect.ValueOf(json.CreatePath),
		"Debug":                       reflect.ValueOf(json.Debug),
		"DebugDOT":                    reflect.ValueOf(json.DebugDOT),
		"DebugWith":                   reflect.ValueOf(json.DebugWith),
		"DecodeFieldPriorityFirstWin": reflect.ValueOf(json.DecodeFieldPriorityFirstWin),
		"DefaultColorScheme":          reflect.ValueOf(&json.DefaultColorScheme).Elem(),
		"DisableHTMLEscape":           reflect.ValueOf(json.DisableHTMLEscape),
		"DisableNormalizeUTF8":        reflect.ValueOf(json.DisableNormalizeUTF8),
		"FieldQueryFromContext":       reflect.ValueOf(&json.FieldQueryFromContext).Elem(),
		"HTMLEscape":                  reflect.ValueOf(json.HTMLEscape),
		"Indent":                      reflect.ValueOf(json.Indent),
		"Marshal":                     reflect.ValueOf(json.Marshal),
		"MarshalContext":              reflect.ValueOf(json.MarshalContext),
		"MarshalIndent":               reflect.ValueOf(json.MarshalIndent),
		"MarshalIndentWithOption":     reflect.ValueOf(json.MarshalIndentWithOption),
		"MarshalNoEscape":             reflect.ValueOf(json.MarshalNoEscape),
		"MarshalWithOption":           reflect.ValueOf(json.MarshalWithOption),
		"NewDecoder":                  reflect.ValueOf(json.NewDecoder),
		"NewEncoder":                  reflect.ValueOf(json.NewEncoder),
		"SetFieldQueryToContext":      reflect.ValueOf(&json.SetFieldQueryToContext).Elem(),
		"Unmarshal":                   reflect.ValueOf(json.Unmarshal),
		"UnmarshalContext":            reflect.ValueOf(json.UnmarshalContext),
		"UnmarshalNoEscape":           reflect.ValueOf(json.UnmarshalNoEscape),
		"UnmarshalWithOption":         reflect.ValueOf(json.UnmarshalWithOption),
		"UnorderedMap":                reflect.ValueOf(json.UnorderedMap),
		"Valid":                       reflect.ValueOf(json.Valid),

		// type definitions
		"ColorFormat":           reflect.ValueOf((*json.ColorFormat)(nil)),
		"ColorScheme":           reflect.ValueOf((*json.ColorScheme)(nil)),
		"DecodeOption":          reflect.ValueOf((*json.DecodeOption)(nil)),
		"DecodeOptionFunc":      reflect.ValueOf((*json.DecodeOptionFunc)(nil)),
		"Decoder":               reflect.ValueOf((*json.Decoder)(nil)),
		"Delim":                 reflect.ValueOf((*json.Delim)(nil)),
		"EncodeOption":          reflect.ValueOf((*json.EncodeOption)(nil)),
		"EncodeOptionFunc":      reflect.ValueOf((*json.EncodeOptionFunc)(nil)),
		"Encoder":               reflect.ValueOf((*json.Encoder)(nil)),
		"FieldQuery":            reflect.ValueOf((*json.FieldQuery)(nil)),
		"FieldQueryString":      reflect.ValueOf((*json.FieldQueryString)(nil)),
		"InvalidUTF8Error":      reflect.ValueOf((*json.InvalidUTF8Error)(nil)),
		"InvalidUnmarshalError": reflect.ValueOf((*json.InvalidUnmarshalError)(nil)),
		"Marshaler":             reflect.ValueOf((*json.Marshaler)(nil)),
		"MarshalerContext":      reflect.ValueOf((*json.MarshalerContext)(nil)),
		"MarshalerError":        reflect.ValueOf((*json.MarshalerError)(nil)),
		"Number":                reflect.ValueOf((*json.Number)(nil)),
		"Path":                  reflect.ValueOf((*json.Path)(nil)),
		"PathError":             reflect.ValueOf((*json.PathError)(nil)),
		"RawMessage":            reflect.ValueOf((*json.RawMessage)(nil)),
		"SubFieldQuery":         reflect.ValueOf((*json.SubFieldQuery)(nil)),
		"SyntaxError":           reflect.ValueOf((*json.SyntaxError)(nil)),
		"Token":                 reflect.ValueOf((*json.Token)(nil)),
		"UnmarshalFieldError":   reflect.ValueOf((*json.UnmarshalFieldError)(nil)),
		"UnmarshalTypeError":    reflect.ValueOf((*json.UnmarshalTypeError)(nil)),
		"Unmarshaler":           reflect.ValueOf((*json.Unmarshaler)(nil)),
		"UnmarshalerContext":    reflect.ValueOf((*json.UnmarshalerContext)(nil)),
		"UnsupportedTypeError":  reflect.ValueOf((*json.UnsupportedTypeError)(nil)),
		"UnsupportedValueError": reflect.ValueOf((*json.UnsupportedValueError)(nil)),

		// interface wrapper definitions
		"_Marshaler":          reflect.ValueOf((*_github_com_goccy_go_json_Marshaler)(nil)),
		"_MarshalerContext":   reflect.ValueOf((*_github_com_goccy_go_json_MarshalerContext)(nil)),
		"_Token":              reflect.ValueOf((*_github_com_goccy_go_json_Token)(nil)),
		"_Unmarshaler":        reflect.ValueOf((*_github_com_goccy_go_json_Unmarshaler)(nil)),
		"_UnmarshalerContext": reflect.ValueOf((*_github_com_goccy_go_json_UnmarshalerContext)(nil)),
	}
}

// _github_com_goccy_go_json_Marshaler is an interface wrapper for Marshaler type
type _github_com_goccy_go_json_Marshaler struct {
	IValue       interface{}
	WMarshalJSON func() ([]byte, error)
}

func (W _github_com_goccy_go_json_Marshaler) MarshalJSON() ([]byte, error) {
	return W.WMarshalJSON()
}

// _github_com_goccy_go_json_MarshalerContext is an interface wrapper for MarshalerContext type
type _github_com_goccy_go_json_MarshalerContext struct {
	IValue       interface{}
	WMarshalJSON func(a0 context.Context) ([]byte, error)
}

func (W _github_com_goccy_go_json_MarshalerContext) MarshalJSON(a0 context.Context) ([]byte, error) {
	return W.WMarshalJSON(a0)
}

// _github_com_goccy_go_json_Token is an interface wrapper for Token type
type _github_com_goccy_go_json_Token struct {
	IValue interface{}
}

// _github_com_goccy_go_json_Unmarshaler is an interface wrapper for Unmarshaler type
type _github_com_goccy_go_json_Unmarshaler struct {
	IValue         interface{}
	WUnmarshalJSON func(a0 []byte) error
}

func (W _github_com_goccy_go_json_Unmarshaler) UnmarshalJSON(a0 []byte) error {
	return W.WUnmarshalJSON(a0)
}

// _github_com_goccy_go_json_UnmarshalerContext is an interface wrapper for UnmarshalerContext type
type _github_com_goccy_go_json_UnmarshalerContext struct {
	IValue         interface{}
	WUnmarshalJSON func(a0 context.Context, a1 []byte) error
}

func (W _github_com_goccy_go_json_UnmarshalerContext) UnmarshalJSON(a0 context.Context, a1 []byte) error {
	return W.WUnmarshalJSON(a0, a1)
}
