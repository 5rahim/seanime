// Code generated by 'yaegi extract github.com/adrg/strutil'. DO NOT EDIT.

package yaegi_interp

import (
	"github.com/adrg/strutil"
	"reflect"
)

func init() {
	Symbols["github.com/adrg/strutil/strutil"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"CommonPrefix":      reflect.ValueOf(strutil.CommonPrefix),
		"NgramCount":        reflect.ValueOf(strutil.NgramCount),
		"NgramIntersection": reflect.ValueOf(strutil.NgramIntersection),
		"NgramMap":          reflect.ValueOf(strutil.NgramMap),
		"Ngrams":            reflect.ValueOf(strutil.Ngrams),
		"Similarity":        reflect.ValueOf(strutil.Similarity),
		"SliceContains":     reflect.ValueOf(strutil.SliceContains),
		"UniqueSlice":       reflect.ValueOf(strutil.UniqueSlice),

		// type definitions
		"StringMetric": reflect.ValueOf((*strutil.StringMetric)(nil)),

		// interface wrapper definitions
		"_StringMetric": reflect.ValueOf((*_github_com_adrg_strutil_StringMetric)(nil)),
	}
}

// _github_com_adrg_strutil_StringMetric is an interface wrapper for StringMetric type
type _github_com_adrg_strutil_StringMetric struct {
	IValue   interface{}
	WCompare func(a string, b string) float64
}

func (W _github_com_adrg_strutil_StringMetric) Compare(a string, b string) float64 {
	return W.WCompare(a, b)
}
