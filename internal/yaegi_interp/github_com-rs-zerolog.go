// Code generated by 'yaegi extract github.com/rs/zerolog'. DO NOT EDIT.

package yaegi_interp

import (
	"github.com/rs/zerolog"
	"go/constant"
	"go/token"
	"reflect"
)

func init() {
	Symbols["github.com/rs/zerolog/zerolog"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"Arr":                                reflect.ValueOf(zerolog.Arr),
		"CallerFieldName":                    reflect.ValueOf(&zerolog.CallerFieldName).Elem(),
		"CallerMarshalFunc":                  reflect.ValueOf(&zerolog.CallerMarshalFunc).Elem(),
		"CallerSkipFrameCount":               reflect.ValueOf(&zerolog.CallerSkipFrameCount).Elem(),
		"ConsoleTestWriter":                  reflect.ValueOf(zerolog.ConsoleTestWriter),
		"Ctx":                                reflect.ValueOf(zerolog.Ctx),
		"DebugLevel":                         reflect.ValueOf(zerolog.DebugLevel),
		"DefaultContextLogger":               reflect.ValueOf(&zerolog.DefaultContextLogger).Elem(),
		"Dict":                               reflect.ValueOf(zerolog.Dict),
		"DisableSampling":                    reflect.ValueOf(zerolog.DisableSampling),
		"Disabled":                           reflect.ValueOf(zerolog.Disabled),
		"DurationFieldInteger":               reflect.ValueOf(&zerolog.DurationFieldInteger).Elem(),
		"DurationFieldUnit":                  reflect.ValueOf(&zerolog.DurationFieldUnit).Elem(),
		"ErrorFieldName":                     reflect.ValueOf(&zerolog.ErrorFieldName).Elem(),
		"ErrorHandler":                       reflect.ValueOf(&zerolog.ErrorHandler).Elem(),
		"ErrorLevel":                         reflect.ValueOf(zerolog.ErrorLevel),
		"ErrorMarshalFunc":                   reflect.ValueOf(&zerolog.ErrorMarshalFunc).Elem(),
		"ErrorStackFieldName":                reflect.ValueOf(&zerolog.ErrorStackFieldName).Elem(),
		"ErrorStackMarshaler":                reflect.ValueOf(&zerolog.ErrorStackMarshaler).Elem(),
		"FatalLevel":                         reflect.ValueOf(zerolog.FatalLevel),
		"FloatingPointPrecision":             reflect.ValueOf(&zerolog.FloatingPointPrecision).Elem(),
		"FormattedLevels":                    reflect.ValueOf(&zerolog.FormattedLevels).Elem(),
		"GlobalLevel":                        reflect.ValueOf(zerolog.GlobalLevel),
		"InfoLevel":                          reflect.ValueOf(zerolog.InfoLevel),
		"InterfaceMarshalFunc":               reflect.ValueOf(&zerolog.InterfaceMarshalFunc).Elem(),
		"LevelColors":                        reflect.ValueOf(&zerolog.LevelColors).Elem(),
		"LevelDebugValue":                    reflect.ValueOf(&zerolog.LevelDebugValue).Elem(),
		"LevelErrorValue":                    reflect.ValueOf(&zerolog.LevelErrorValue).Elem(),
		"LevelFatalValue":                    reflect.ValueOf(&zerolog.LevelFatalValue).Elem(),
		"LevelFieldMarshalFunc":              reflect.ValueOf(&zerolog.LevelFieldMarshalFunc).Elem(),
		"LevelFieldName":                     reflect.ValueOf(&zerolog.LevelFieldName).Elem(),
		"LevelInfoValue":                     reflect.ValueOf(&zerolog.LevelInfoValue).Elem(),
		"LevelPanicValue":                    reflect.ValueOf(&zerolog.LevelPanicValue).Elem(),
		"LevelTraceValue":                    reflect.ValueOf(&zerolog.LevelTraceValue).Elem(),
		"LevelWarnValue":                     reflect.ValueOf(&zerolog.LevelWarnValue).Elem(),
		"MessageFieldName":                   reflect.ValueOf(&zerolog.MessageFieldName).Elem(),
		"MultiLevelWriter":                   reflect.ValueOf(zerolog.MultiLevelWriter),
		"New":                                reflect.ValueOf(zerolog.New),
		"NewConsoleWriter":                   reflect.ValueOf(zerolog.NewConsoleWriter),
		"NewLevelHook":                       reflect.ValueOf(zerolog.NewLevelHook),
		"NewTestWriter":                      reflect.ValueOf(zerolog.NewTestWriter),
		"NoLevel":                            reflect.ValueOf(zerolog.NoLevel),
		"Nop":                                reflect.ValueOf(zerolog.Nop),
		"Often":                              reflect.ValueOf(&zerolog.Often).Elem(),
		"PanicLevel":                         reflect.ValueOf(zerolog.PanicLevel),
		"ParseLevel":                         reflect.ValueOf(zerolog.ParseLevel),
		"Rarely":                             reflect.ValueOf(&zerolog.Rarely).Elem(),
		"SetGlobalLevel":                     reflect.ValueOf(zerolog.SetGlobalLevel),
		"Sometimes":                          reflect.ValueOf(&zerolog.Sometimes).Elem(),
		"SyncWriter":                         reflect.ValueOf(zerolog.SyncWriter),
		"TimeFieldFormat":                    reflect.ValueOf(&zerolog.TimeFieldFormat).Elem(),
		"TimeFormatUnix":                     reflect.ValueOf(constant.MakeFromLiteral("\"\"", token.STRING, 0)),
		"TimeFormatUnixMicro":                reflect.ValueOf(constant.MakeFromLiteral("\"UNIXMICRO\"", token.STRING, 0)),
		"TimeFormatUnixMs":                   reflect.ValueOf(constant.MakeFromLiteral("\"UNIXMS\"", token.STRING, 0)),
		"TimeFormatUnixNano":                 reflect.ValueOf(constant.MakeFromLiteral("\"UNIXNANO\"", token.STRING, 0)),
		"TimestampFieldName":                 reflect.ValueOf(&zerolog.TimestampFieldName).Elem(),
		"TimestampFunc":                      reflect.ValueOf(&zerolog.TimestampFunc).Elem(),
		"TraceLevel":                         reflect.ValueOf(zerolog.TraceLevel),
		"TriggerLevelWriterBufferReuseLimit": reflect.ValueOf(&zerolog.TriggerLevelWriterBufferReuseLimit).Elem(),
		"WarnLevel":                          reflect.ValueOf(zerolog.WarnLevel),

		// type definitions
		"Array":               reflect.ValueOf((*zerolog.Array)(nil)),
		"BasicSampler":        reflect.ValueOf((*zerolog.BasicSampler)(nil)),
		"BurstSampler":        reflect.ValueOf((*zerolog.BurstSampler)(nil)),
		"ConsoleWriter":       reflect.ValueOf((*zerolog.ConsoleWriter)(nil)),
		"Context":             reflect.ValueOf((*zerolog.Context)(nil)),
		"Event":               reflect.ValueOf((*zerolog.Event)(nil)),
		"FilteredLevelWriter": reflect.ValueOf((*zerolog.FilteredLevelWriter)(nil)),
		"Formatter":           reflect.ValueOf((*zerolog.Formatter)(nil)),
		"Hook":                reflect.ValueOf((*zerolog.Hook)(nil)),
		"HookFunc":            reflect.ValueOf((*zerolog.HookFunc)(nil)),
		"Level":               reflect.ValueOf((*zerolog.Level)(nil)),
		"LevelHook":           reflect.ValueOf((*zerolog.LevelHook)(nil)),
		"LevelSampler":        reflect.ValueOf((*zerolog.LevelSampler)(nil)),
		"LevelWriter":         reflect.ValueOf((*zerolog.LevelWriter)(nil)),
		"LevelWriterAdapter":  reflect.ValueOf((*zerolog.LevelWriterAdapter)(nil)),
		"LogArrayMarshaler":   reflect.ValueOf((*zerolog.LogArrayMarshaler)(nil)),
		"LogObjectMarshaler":  reflect.ValueOf((*zerolog.LogObjectMarshaler)(nil)),
		"Logger":              reflect.ValueOf((*zerolog.Logger)(nil)),
		"RandomSampler":       reflect.ValueOf((*zerolog.RandomSampler)(nil)),
		"Sampler":             reflect.ValueOf((*zerolog.Sampler)(nil)),
		"TestWriter":          reflect.ValueOf((*zerolog.TestWriter)(nil)),
		"TestingLog":          reflect.ValueOf((*zerolog.TestingLog)(nil)),
		"TriggerLevelWriter":  reflect.ValueOf((*zerolog.TriggerLevelWriter)(nil)),

		// interface wrapper definitions
		"_Hook":               reflect.ValueOf((*_github_com_rs_zerolog_Hook)(nil)),
		"_LevelWriter":        reflect.ValueOf((*_github_com_rs_zerolog_LevelWriter)(nil)),
		"_LogArrayMarshaler":  reflect.ValueOf((*_github_com_rs_zerolog_LogArrayMarshaler)(nil)),
		"_LogObjectMarshaler": reflect.ValueOf((*_github_com_rs_zerolog_LogObjectMarshaler)(nil)),
		"_Sampler":            reflect.ValueOf((*_github_com_rs_zerolog_Sampler)(nil)),
		"_TestingLog":         reflect.ValueOf((*_github_com_rs_zerolog_TestingLog)(nil)),
	}
}

// _github_com_rs_zerolog_Hook is an interface wrapper for Hook type
type _github_com_rs_zerolog_Hook struct {
	IValue interface{}
	WRun   func(e *zerolog.Event, level zerolog.Level, message string)
}

func (W _github_com_rs_zerolog_Hook) Run(e *zerolog.Event, level zerolog.Level, message string) {
	W.WRun(e, level, message)
}

// _github_com_rs_zerolog_LevelWriter is an interface wrapper for LevelWriter type
type _github_com_rs_zerolog_LevelWriter struct {
	IValue      interface{}
	WWrite      func(p []byte) (n int, err error)
	WWriteLevel func(level zerolog.Level, p []byte) (n int, err error)
}

func (W _github_com_rs_zerolog_LevelWriter) Write(p []byte) (n int, err error) {
	return W.WWrite(p)
}
func (W _github_com_rs_zerolog_LevelWriter) WriteLevel(level zerolog.Level, p []byte) (n int, err error) {
	return W.WWriteLevel(level, p)
}

// _github_com_rs_zerolog_LogArrayMarshaler is an interface wrapper for LogArrayMarshaler type
type _github_com_rs_zerolog_LogArrayMarshaler struct {
	IValue               interface{}
	WMarshalZerologArray func(a *zerolog.Array)
}

func (W _github_com_rs_zerolog_LogArrayMarshaler) MarshalZerologArray(a *zerolog.Array) {
	W.WMarshalZerologArray(a)
}

// _github_com_rs_zerolog_LogObjectMarshaler is an interface wrapper for LogObjectMarshaler type
type _github_com_rs_zerolog_LogObjectMarshaler struct {
	IValue                interface{}
	WMarshalZerologObject func(e *zerolog.Event)
}

func (W _github_com_rs_zerolog_LogObjectMarshaler) MarshalZerologObject(e *zerolog.Event) {
	W.WMarshalZerologObject(e)
}

// _github_com_rs_zerolog_Sampler is an interface wrapper for Sampler type
type _github_com_rs_zerolog_Sampler struct {
	IValue  interface{}
	WSample func(lvl zerolog.Level) bool
}

func (W _github_com_rs_zerolog_Sampler) Sample(lvl zerolog.Level) bool {
	return W.WSample(lvl)
}

// _github_com_rs_zerolog_TestingLog is an interface wrapper for TestingLog type
type _github_com_rs_zerolog_TestingLog struct {
	IValue  interface{}
	WHelper func()
	WLog    func(args ...interface{})
	WLogf   func(format string, args ...interface{})
}

func (W _github_com_rs_zerolog_TestingLog) Helper() {
	W.WHelper()
}
func (W _github_com_rs_zerolog_TestingLog) Log(args ...interface{}) {
	W.WLog(args...)
}
func (W _github_com_rs_zerolog_TestingLog) Logf(format string, args ...interface{}) {
	W.WLogf(format, args...)
}
