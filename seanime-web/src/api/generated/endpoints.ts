// This file was generated by the Seanime API documentation generator.

export const API_ENDPOINTS = {
    ANILIST: {
        GetAnilistCollection: {
            key: "ANILIST-get-anilist-collection",
            methods: ["GET", "POST"],
            endpoint: "/api/v1/anilist/collection",
        },
        EditAnilistListEntry: {
            key: "ANILIST-edit-anilist-list-entry",
            methods: ["POST"],
            endpoint: "/api/v1/anilist/list-entry",
        },
        GetAnilistMediaDetails: {
            key: "ANILIST-get-anilist-media-details",
            methods: ["GET"],
            endpoint: "/api/v1/anilist/media-details/{id}",
        },
        DeleteAnilistListEntry: {
            key: "ANILIST-delete-anilist-list-entry",
            methods: ["DELETE"],
            endpoint: "/api/v1/anilist/list-entry",
        },
        AnilistListAnime: {
            key: "ANILIST-anilist-list-anime",
            methods: ["POST"],
            endpoint: "/api/v1/anilist/list-anime",
        },
        AnilistListRecentAiringAnime: {
            key: "ANILIST-anilist-list-recent-airing-anime",
            methods: ["POST"],
            endpoint: "/api/v1/anilist/list-recent-anime",
        },
    },
    AUTH: {
        Login: {
            key: "AUTH-login",
            methods: ["POST"],
            endpoint: "/api/v1/auth/login",
        },
        Logout: {
            key: "AUTH-logout",
            methods: ["POST"],
            endpoint: "/api/v1/auth/logout",
        },
    },
    AUTO_DOWNLOADER: {
        RunAutoDownloader: {
            key: "AUTO_DOWNLOADER-run-auto-downloader",
            methods: ["POST"],
            endpoint: "/api/v1/auto-downloader/run",
        },
        GetAutoDownloaderRule: {
            key: "AUTO_DOWNLOADER-get-auto-downloader-rule",
            methods: ["GET"],
            endpoint: "/api/v1/auto-downloader/rule/{id}",
        },
        GetAutoDownloaderRules: {
            key: "AUTO_DOWNLOADER-get-auto-downloader-rules",
            methods: ["GET"],
            endpoint: "/api/v1/auto-downloader/rules",
        },
        CreateAutoDownloaderRule: {
            key: "AUTO_DOWNLOADER-create-auto-downloader-rule",
            methods: ["POST"],
            endpoint: "/api/v1/auto-downloader/rule",
        },
        UpdateAutoDownloaderRule: {
            key: "AUTO_DOWNLOADER-update-auto-downloader-rule",
            methods: ["PATCH"],
            endpoint: "/api/v1/auto-downloader/rule",
        },
        DeleteAutoDownloaderRule: {
            key: "AUTO_DOWNLOADER-delete-auto-downloader-rule",
            methods: ["DELETE"],
            endpoint: "/api/v1/auto-downloader/rule/{id}",
        },
        GetAutoDownloaderItems: {
            key: "AUTO_DOWNLOADER-get-auto-downloader-items",
            methods: ["GET"],
            endpoint: "/api/v1/auto-downloader/items",
        },
        DeleteAutoDownloaderItem: {
            key: "AUTO_DOWNLOADER-delete-auto-downloader-item",
            methods: ["DELETE"],
            endpoint: "/api/v1/auto-downloader/item",
        },
    },
    COLLECTION: {
        GetLibraryCollection: {
            key: "COLLECTION-get-library-collection",
            methods: ["GET", "POST"],
            endpoint: "/api/v1/library/collection",
        },
    },
    DIRECTORY_SELECTOR: {
        DirectorySelector: {
            key: "DIRECTORY_SELECTOR-directory-selector",
            methods: ["POST"],
            endpoint: "/api/v1/directory-selector",
        },
    },
    DISCORD: {
        SetDiscordMangaActivity: {
            key: "DISCORD-set-discord-manga-activity",
            methods: ["POST"],
            endpoint: "/api/v1/discord/presence/manga",
        },
        CancelDiscordActivity: {
            key: "DISCORD-cancel-discord-activity",
            methods: ["POST"],
            endpoint: "/api/v1/discord/presence/cancel",
        },
    },
    DOCS: {
        GetDocs: {
            key: "DOCS-get-docs",
            methods: ["GET"],
            endpoint: "/api/v1/internal/docs",
        },
    },
    DOWNLOAD: {
        DownloadTorrentFile: {
            key: "DOWNLOAD-download-torrent-file",
            methods: ["POST"],
            endpoint: "/api/v1/download-torrent-file",
        },
        DownloadRelease: {
            key: "DOWNLOAD-download-release",
            methods: ["POST"],
            endpoint: "/api/v1/download-release",
        },
    },
    ENTRIES: {
        GetMediaEntry: {
            key: "ENTRIES-get-media-entry",
            methods: ["GET"],
            endpoint: "/api/v1/library/media-entry/{id}",
        },
        MediaEntryBulkAction: {
            key: "ENTRIES-media-entry-bulk-action",
            methods: ["PATCH"],
            endpoint: "/api/v1/library/media-entry/bulk-action",
        },
        OpenMediaEntryInExplorer: {
            key: "ENTRIES-open-media-entry-in-explorer",
            methods: ["POST"],
            endpoint: "/api/v1/library/media-entry/open-in-explorer",
        },
        FindProspectiveMediaEntrySuggestions: {
            key: "ENTRIES-find-prospective-media-entry-suggestions",
            methods: ["POST"],
            endpoint: "/api/v1/library/media-entry/suggestions",
        },
        MediaEntryManualMatch: {
            key: "ENTRIES-media-entry-manual-match",
            methods: ["POST"],
            endpoint: "/api/v1/library/media-entry/manual-match",
        },
        GetMissingEpisodes: {
            key: "ENTRIES-get-missing-episodes",
            methods: ["GET"],
            endpoint: "/api/v1/library/missing-episodes",
        },
        AddUnknownMedia: {
            key: "ENTRIES-add-unknown-media",
            methods: ["POST"],
            endpoint: "/api/v1/media-entry/unknown-media",
        },
        UpdateProgress: {
            key: "ENTRIES-update-progress",
            methods: ["POST"],
            endpoint: "/api/v1/media-entry/update-progress",
        },
    },
    EXPLORER: {
        OpenInExplorer: {
            key: "EXPLORER-open-in-explorer",
            methods: ["POST"],
            endpoint: "/api/v1/open-in-explorer",
        },
    },
    FILECACHE: {
        GetFileCacheTotalSize: {
            key: "FILECACHE-get-file-cache-total-size",
            methods: ["GET"],
            endpoint: "/api/v1/filecache/total-size",
        },
        RemoveFileCacheBucket: {
            key: "FILECACHE-remove-file-cache-bucket",
            methods: ["DELETE"],
            endpoint: "/api/v1/filecache/bucket",
        },
    },
    LIST_SYNC: {
        DeleteListSyncCache: {
            key: "LIST_SYNC-delete-list-sync-cache",
            methods: ["POST"],
            endpoint: "/api/v1/filecache/cache",
        },
        GetListSyncAnimeDiffs: {
            key: "LIST_SYNC-get-list-sync-anime-diffs",
            methods: ["GET"],
            endpoint: "/api/v1/filecache/anime",
        },
        SyncAnime: {
            key: "LIST_SYNC-sync-anime",
            methods: ["POST"],
            endpoint: "/api/v1/filecache/anime",
        },
    },
    LOCALFILES: {
        GetLocalFiles: {
            key: "LOCALFILES-get-local-files",
            methods: ["GET"],
            endpoint: "/api/v1/library/local-files",
        },
        LocalFileBulkAction: {
            key: "LOCALFILES-local-file-bulk-action",
            methods: ["POST"],
            endpoint: "/api/v1/library/local-files",
        },
        UpdateLocalFileData: {
            key: "LOCALFILES-update-local-file-data",
            methods: ["PATCH"],
            endpoint: "/api/v1/library/local-file",
        },
        DeleteLocalFiles: {
            key: "LOCALFILES-delete-local-files",
            methods: ["DELETE"],
            endpoint: "/api/v1/library/local-files",
        },
        RemoveEmptyDirectories: {
            key: "LOCALFILES-remove-empty-directories",
            methods: ["DELETE"],
            endpoint: "/api/v1/library/empty-directories",
        },
    },
    MAL: {
        MALAuth: {
            key: "MAL-mal-auth",
            methods: ["POST"],
            endpoint: "/api/v1/mal/auth",
        },
        EditMALListEntryProgress: {
            key: "MAL-edit-mal-list-entry-progress",
            methods: ["POST"],
            endpoint: "/api/v1/mal/list-entry/progress",
        },
        MALLogout: {
            key: "MAL-mal-logout",
            methods: ["POST"],
            endpoint: "/api/v1/mal/logout",
        },
    },
    MANGA: {
        GetAnilistMangaCollection: {
            key: "MANGA-get-anilist-manga-collection",
            methods: ["GET"],
            endpoint: "/api/v1/manga/anilist/collection",
        },
        GetMangaCollection: {
            key: "MANGA-get-manga-collection",
            methods: ["GET"],
            endpoint: "/api/v1/manga/collection",
        },
        GetMangaEntry: {
            key: "MANGA-get-manga-entry",
            methods: ["GET"],
            endpoint: "/api/v1/manga/entry/{id}",
        },
        GetMangaEntryDetails: {
            key: "MANGA-get-manga-entry-details",
            methods: ["GET"],
            endpoint: "/api/v1/manga/entry/{id}/details",
        },
        EmptyMangaEntryCache: {
            key: "MANGA-empty-manga-entry-cache",
            methods: ["DELETE"],
            endpoint: "/api/v1/manga/entry/cache",
        },
        GetMangaEntryChapters: {
            key: "MANGA-get-manga-entry-chapters",
            methods: ["POST"],
            endpoint: "/api/v1/manga/chapters",
        },
        GetMangaEntryPages: {
            key: "MANGA-get-manga-entry-pages",
            methods: ["POST"],
            endpoint: "/api/v1/manga/pages",
        },
        AnilistListManga: {
            key: "MANGA-anilist-list-manga",
            methods: ["POST"],
            endpoint: "/api/v1/manga/anilist/list",
        },
        UpdateMangaProgress: {
            key: "MANGA-update-manga-progress",
            methods: ["POST"],
            endpoint: "/api/v1/manga/update-progress",
        },
    },
    MANGA_DOWNLOAD: {
        DownloadMangaChapters: {
            key: "MANGA_DOWNLOAD-download-manga-chapters",
            methods: ["POST"],
            endpoint: "/api/v1/manga/download-chapters",
        },
        GetMangaDownloadData: {
            key: "MANGA_DOWNLOAD-get-manga-download-data",
            methods: ["POST"],
            endpoint: "/api/v1/manga/download-data",
        },
        GetMangaDownloadQueue: {
            key: "MANGA_DOWNLOAD-get-manga-download-queue",
            methods: ["GET"],
            endpoint: "/api/v1/manga/download-queue",
        },
        StartMangaDownloadQueue: {
            key: "MANGA_DOWNLOAD-start-manga-download-queue",
            methods: ["POST"],
            endpoint: "/api/v1/manga/download-queue/start",
        },
        StopMangaDownloadQueue: {
            key: "MANGA_DOWNLOAD-stop-manga-download-queue",
            methods: ["POST"],
            endpoint: "/api/v1/manga/download-queue/stop",
        },
        ClearAllChapterDownloadQueue: {
            key: "MANGA_DOWNLOAD-clear-all-chapter-download-queue",
            methods: ["DELETE"],
            endpoint: "/api/v1/manga/download-queue",
        },
        ResetErroredChapterDownloadQueue: {
            key: "MANGA_DOWNLOAD-reset-errored-chapter-download-queue",
            methods: ["POST"],
            endpoint: "/api/v1/manga/download-queue/reset-errored",
        },
        DeleteMangaChapterDownload: {
            key: "MANGA_DOWNLOAD-delete-manga-chapter-download",
            methods: ["DELETE"],
            endpoint: "/api/v1/manga/download-chapter",
        },
        GetMangaDownloadsList: {
            key: "MANGA_DOWNLOAD-get-manga-downloads-list",
            methods: ["GET"],
            endpoint: "/api/v1/manga/downloads",
        },
    },
    MANUAL_DUMP: {
        TestDump: {
            key: "MANUAL_DUMP-test-dump",
            methods: ["POST"],
            endpoint: "/api/v1/test-dump",
        },
    },
    MEDIAPLAYER: {
        PlayVideo: {
            key: "MEDIAPLAYER-play-video",
            methods: ["POST"],
            endpoint: "/api/v1/media-player/play",
        },
        StartDefaultMediaPlayer: {
            key: "MEDIAPLAYER-start-default-media-player",
            methods: ["POST"],
            endpoint: "/api/v1/media-player/start",
        },
    },
    METADATA: {
        PopulateTVDBEpisodes: {
            key: "METADATA-populate-tvdb-episodes",
            methods: ["POST"],
            endpoint: "/api/v1/metadata-provider/tvdb-episodes",
        },
        EmptyTVDBEpisodes: {
            key: "METADATA-empty-tvdb-episodes",
            methods: ["DELETE"],
            endpoint: "/api/v1/metadata-provider/tvdb-episodes",
        },
    },
    OFFLINE: {
        CreateOfflineSnapshot: {
            key: "OFFLINE-create-offline-snapshot",
            methods: ["POST"],
            endpoint: "/api/offline/snapshot",
        },
        GetOfflineSnapshot: {
            key: "OFFLINE-get-offline-snapshot",
            methods: ["GET"],
            endpoint: "/api/offline/snapshot",
        },
        GetOfflineSnapshotEntry: {
            key: "OFFLINE-get-offline-snapshot-entry",
            methods: ["GET"],
            endpoint: "/api/offline/snapshot-entry",
        },
        UpdateOfflineEntryListData: {
            key: "OFFLINE-update-offline-entry-list-data",
            methods: ["PATCH"],
            endpoint: "/api/offline/snapshot-entry",
        },
        SyncOfflineData: {
            key: "OFFLINE-sync-offline-data",
            methods: ["POST"],
            endpoint: "/api/offline/sync",
        },
    },
    ONLINESTREAM: {
        GetOnlineStreamEpisodeList: {
            key: "ONLINESTREAM-get-online-stream-episode-list",
            methods: ["POST"],
            endpoint: "/api/v1/onlinestream/episode-list",
        },
        GetOnlineStreamEpisodeSource: {
            key: "ONLINESTREAM-get-online-stream-episode-source",
            methods: ["POST"],
            endpoint: "/api/v1/onlinestream/episode-sources",
        },
        OnlineStreamEmptyCache: {
            key: "ONLINESTREAM-online-stream-empty-cache",
            methods: ["DELETE"],
            endpoint: "/api/v1/onlinestream/cache",
        },
    },
    PLAYBACK_MANAGER: {
        PlaybackSyncCurrentProgress: {
            key: "PLAYBACK_MANAGER-playback-sync-current-progress",
            methods: ["POST"],
            endpoint: "/api/v1/playback-manager/sync-current-progress",
        },
        PlaybackPlayNextEpisode: {
            key: "PLAYBACK_MANAGER-playback-play-next-episode",
            methods: ["POST"],
            endpoint: "/api/v1/playback-manager/play-next",
        },
        PlaybackStartPlaylist: {
            key: "PLAYBACK_MANAGER-playback-start-playlist",
            methods: ["POST"],
            endpoint: "/api/v1/playback-manager/start-playlist",
        },
        PlaybackCancelCurrentPlaylist: {
            key: "PLAYBACK_MANAGER-playback-cancel-current-playlist",
            methods: ["POST"],
            endpoint: "/api/v1/playback-manager/cancel-playlist",
        },
        PlaybackPlaylistNext: {
            key: "PLAYBACK_MANAGER-playback-playlist-next",
            methods: ["POST"],
            endpoint: "/api/v1/playback-manager/playlist-next",
        },
    },
    PLAYLIST: {
        CreatePlaylist: {
            key: "PLAYLIST-create-playlist",
            methods: ["POST"],
            endpoint: "/api/v1/playlist",
        },
        GetPlaylists: {
            key: "PLAYLIST-get-playlists",
            methods: ["GET"],
            endpoint: "/api/v1/playlists",
        },
        UpdatePlaylist: {
            key: "PLAYLIST-update-playlist",
            methods: ["PATCH"],
            endpoint: "/api/v1/playlist/{id}",
        },
        DeletePlaylist: {
            key: "PLAYLIST-delete-playlist",
            methods: ["DELETE"],
            endpoint: "/api/v1/playlist",
        },
        GetPlaylistEpisodes: {
            key: "PLAYLIST-get-playlist-episodes",
            methods: ["GET"],
            endpoint: "/api/v1/playlist/episodes/{id}/{progress}",
        },
    },
    RELEASES: {
        GetLatestUpdate: {
            key: "RELEASES-get-latest-update",
            methods: ["GET"],
            endpoint: "/api/v1/latest-update",
        },
    },
    ROUTES: {},
    SCAN: {
        ScanLocalFiles: {
            key: "SCAN-scan-local-files",
            methods: ["POST"],
            endpoint: "/library/scan",
        },
    },
    SCAN_SUMMARY: {
        GetLatestScanSummaries: {
            key: "SCAN_SUMMARY-get-latest-scan-summaries",
            methods: ["GET"],
            endpoint: "/api/v1/library/scan-summaries",
        },
    },
    SETTINGS: {
        GetSettings: {
            key: "SETTINGS-get-settings",
            methods: ["GET"],
            endpoint: "/api/v1/settings",
        },
        SaveSettings: {
            key: "SETTINGS-save-settings",
            methods: ["POST"],
            endpoint: "/api/v1/settings",
        },
        SaveListSyncSettings: {
            key: "SETTINGS-save-list-sync-settings",
            methods: ["PATCH"],
            endpoint: "/api/v1/settings/list-sync",
        },
        SaveAutoDownloaderSettings: {
            key: "SETTINGS-save-auto-downloader-settings",
            methods: ["PATCH"],
            endpoint: "/api/v1/settings/auto-downloader",
        },
    },
    SILENCED_MEDIA_ENTRIES: {
        GetMediaEntrySilenceStatus: {
            key: "SILENCED_MEDIA_ENTRIES-get-media-entry-silence-status",
            methods: ["GET"],
            endpoint: "/api/v1/library/media-entry/silence/:id",
        },
        ToggleMediaEntrySilenceStatus: {
            key: "SILENCED_MEDIA_ENTRIES-toggle-media-entry-silence-status",
            methods: ["POST"],
            endpoint: "/api/v1/library/media-entry/silence",
        },
    },
    STATUS: {
        Status: {
            key: "STATUS-status",
            methods: ["POST"],
            endpoint: "/api/v1/library/media-entry/silence",
        },
    },
    THEME: {
        GetTheme: {
            key: "THEME-get-theme",
            methods: ["GET"],
            endpoint: "/api/v1/theme",
        },
        UpdateTheme: {
            key: "THEME-update-theme",
            methods: ["PATCH"],
            endpoint: "/api/v1/theme",
        },
    },
    TORRENT_CLIENT: {
        GetActiveTorrentList: {
            key: "TORRENT_CLIENT-get-active-torrent-list",
            methods: ["GET"],
            endpoint: "/api/v1/torrent-client/list",
        },
        TorrentClientAction: {
            key: "TORRENT_CLIENT-torrent-client-action",
            methods: ["POST"],
            endpoint: "/api/v1/torrent-client/action",
        },
        TorrentClientDownload: {
            key: "TORRENT_CLIENT-torrent-client-download",
            methods: ["POST"],
            endpoint: "/api/v1/torrent-client/download",
        },
        TorrentClientAddMagnetFromRule: {
            key: "TORRENT_CLIENT-torrent-client-add-magnet-from-rule",
            methods: ["POST"],
            endpoint: "/api/v1/torrent-client/rule-magnet",
        },
    },
    TORRENT_SEARCH: {
        TorrentSearch: {
            key: "TORRENT_SEARCH-torrent-search",
            methods: ["POST"],
            endpoint: "/api/v1/torrent/search",
        },
        NsfwTorrentSearch: {
            key: "TORRENT_SEARCH-nsfw-torrent-search",
            methods: ["POST"],
            endpoint: "/api/v1/torrent/nsfw-search",
        },
    },
    WEBSOCKET: {},
}

